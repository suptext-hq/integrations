# https://blog.liblab.com/using-github-graphql-api-with-github-actions
# https://gitprotect.io/blog/optimizing-github-actions-with-github-graphql-api/#Setting_up_GitHub_GraphQL_API_with_GitHub_Actions

name: Get GQL
on:
  workflow_dispatch:

jobs:
  fetch-repo-id:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:

      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.SUPTEXT_AUTH_ID }}
          private-key: ${{ secrets.SUPTEXT_AUTH_PEM }}
          
      - name: Query GitHub GraphQL API
        id: fetch_data
        uses: actions/github-script@v7
        # env:
          # GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_FULL }}  
          # SECRETS: ${{ toJSON(secrets) }}
        with:
          # github-token: ${{ secrets.GH_READ_PROJECTS }}
          github-token: ${{ steps.generate-token.outputs.token }}
          # result-encoding: string
          script: |
            const query = `
              query {
                node(id: "PVT_kwDOCrWuKc4Am5oU") {
                  ... on ProjectV2 {
                    statusUpdates(last: 1) {
                      nodes {
                        status
                        createdAt
                      }
                    }
                    items(last: 20) {
                      nodes {
                        id
                        fieldValues(first: 8) {
                          nodes {
                            ... on ProjectV2ItemFieldTextValue {
                              text
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                }
                              }
                            }
                            ... on ProjectV2ItemFieldDateValue {
                              date
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                }
                              }
                            }
                            ... on ProjectV2ItemFieldSingleSelectValue {
                              name
                              description
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }`;
            const response = await github.graphql(query);
            return response; //.organization.projectsV2.nodes.map(d=>d.id)
            
      - name: Get result
        run: "echo '${{ steps.fetch_data.outputs.result }}'"
